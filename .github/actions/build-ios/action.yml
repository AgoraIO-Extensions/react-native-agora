name: Build iOS
description: Common steps for building iOS app

inputs:
  new-arch:
    description: 'Whether to enable new architecture'
    required: true
    default: 'false'
  turbo-cache-dir:
    description: 'Turborepo cache directory'
    required: true
    default: '.turbo/ios'
  build-task:
    description: 'The build task to run'
    required: true
    default: 'build:ios'
  force-build:
    description: 'Whether to force the build'
    required: false
    default: 'false'

runs:
  using: composite
  steps:
    - name: Setup fastlane
      run: |
        brew install fastlane
      shell: bash

    - name: Cache turborepo for iOS
      uses: actions/cache@v3
      with:
        path: ${{ inputs.turbo-cache-dir }}
        key: ${{ runner.os }}-turborepo-ios-${{ inputs.build-task }}-${{ inputs.new-arch }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-turborepo-ios-${{ inputs.build-task }}-${{ inputs.new-arch }}-

    - name: Cache cocoapods
      id: cocoapods-cache
      uses: actions/cache@v3
      with:
        path: |
          **/ios/Pods
        key: ${{ runner.os }}-cocoapods-${{ inputs.new-arch }}-${{ hashFiles('example/ios/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-cocoapods-${{ inputs.new-arch }}-

    - name: Install cocoapods
      run: |
        yarn pod-install example/ios
      shell: bash

    - name: Modify APP ID
      run: |
        sed "s/localAppId = '\(.*\)'/localAppId = '${{ secrets.APP_ID }}'/g" agora.config.ts > tmp
        mv tmp agora.config.ts
      working-directory: example/src/config
      shell: bash

    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/${{ secrets.BUILD_PROVISION_PROFILE_UUID }}.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

        # create temporary keychain
        security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

        # import certificate to keychain
        security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      shell: bash

    - name: Build example for iOS
      run: |
        yarn turbo run ${{ inputs.build-task }} --cache-dir="${{ inputs.turbo-cache-dir }}" ${{ inputs.force-build == 'true' && '--force=true' || '' }}
      shell: bash
