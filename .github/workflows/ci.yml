name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - release/*

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Lint files
        run: yarn lint

      - name: Typecheck files
        run: |
          yarn example install --immutable
          yarn typecheck

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run unit tests
        run: yarn test --maxWorkers=2 --coverage

  build-library:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build package
        run: yarn prepare

  test-android:
    strategy:
      matrix:
        newArch: [ true, false ]
    runs-on: macos-latest
    env:
      TURBO_CACHE_DIR: .turbo/android
      ORG_GRADLE_PROJECT_newArchEnabled: ${{ matrix.newArch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Cache turborepo for Android
        uses: actions/cache@v3
        with:
          path: ${{ env.TURBO_CACHE_DIR }}
          key: ${{ runner.os }}-turborepo-android-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-turborepo-android-

      - name: Check turborepo cache for Android
        run: |
          TURBO_CACHE_STATUS=$(node -p "($(yarn turbo run build:android --cache-dir="${{ env.TURBO_CACHE_DIR }}" --dry=json)).tasks.find(t => t.task === 'build:android').cache.status")

          if [[ $TURBO_CACHE_STATUS == "HIT" ]]; then
            echo "turbo_cache_hit=1" >> $GITHUB_ENV
          fi

      - name: Install JDK
        if: env.turbo_cache_hit != 1
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Finalize Android SDK
        if: env.turbo_cache_hit != 1
        run: |
          /bin/bash -c "yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null"

      - name: Cache Gradle
        if: env.turbo_cache_hit != 1
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('example/android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Detox dependencies
        shell: bash
        run: |
          npm i -D detox-cli react-native-cli

      - name: Modify APP ID
        run: |
          sed "s/localAppId = '\(.*\)'/localAppId = '${{ secrets.APP_ID }}'/g" agora.config.ts > tmp
          mv tmp agora.config.ts
        working-directory: example/src/config

      - name: Build example for Android
        run: |
          yarn turbo run detox:android --cache-dir="${{ env.TURBO_CACHE_DIR }}"

      - name: Run e2e tests
        if: ${{ matrix.newArch == false }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 31
          arch: x86_64
          avd-name: emulator
          working-directory: example
          script: detox test -c android.emu.release

  test-ios:
    strategy:
      matrix:
        newArch: [ 1, 0 ]
    runs-on: macos-latest
    env:
      TURBO_CACHE_DIR: .turbo/ios
      RCT_NEW_ARCH_ENABLED: ${{ matrix.newArch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Cache turborepo for iOS
        uses: actions/cache@v3
        with:
          path: ${{ env.TURBO_CACHE_DIR }}
          key: ${{ runner.os }}-turborepo-ios-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-turborepo-ios-

      - name: Check turborepo cache for iOS
        run: |
          TURBO_CACHE_STATUS=$(node -p "($(yarn turbo run build:ios --cache-dir="${{ env.TURBO_CACHE_DIR }}" --dry=json)).tasks.find(t => t.task === 'build:ios').cache.status")

          if [[ $TURBO_CACHE_STATUS == "HIT" ]]; then
            echo "turbo_cache_hit=1" >> $GITHUB_ENV
          fi

      - name: Cache cocoapods
        if: env.turbo_cache_hit != 1
        id: cocoapods-cache
        uses: actions/cache@v3
        with:
          path: |
            **/ios/Pods
          key: ${{ runner.os }}-cocoapods-${{ hashFiles('example/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-cocoapods-

      - name: Install cocoapods
        if: env.turbo_cache_hit != 1 && steps.cocoapods-cache.outputs.cache-hit != 'true'
        run: |
          yarn pod-install example/ios
        env:
          NO_FLIPPER: 1

      - name: Install Detox dependencies
        shell: bash
        run: |
          npm i -D detox-cli react-native-cli
          brew tap wix/brew
          brew install applesimutils

      - name: Modify APP ID
        run: |
          sed "s/localAppId = '\(.*\)'/localAppId = '${{ secrets.APP_ID }}'/g" agora.config.ts > tmp
          mv tmp agora.config.ts
        working-directory: example/src/config

      - name: Build example for iOS
        run: |
          yarn turbo run detox:ios --cache-dir="${{ env.TURBO_CACHE_DIR }}"

      - uses: futureware-tech/simulator-action@v1
        with:
          model: 'iPhone 14'

      - name: Run e2e tests
        if: ${{ matrix.newArch == 0 }}
        working-directory: example
        run: |
          detox clean-framework-cache
          detox build-framework-cache
          detox test -c ios.sim.release
